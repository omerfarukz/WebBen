name: CI & CD

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '6.0.x' ]

    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore -p:PackAsTool=True
#       - name: Test
#         run: dotnet test -p:coverletOutput=./lcov.info -p:CollectCoverage=true -p:CoverletOutputFormat=lcov 
#       - name: Publish the package to nuget
#         run: dotnet nuget push WebBen.CLI/bin/Release/*.nupkg --api-key "${{secrets.NUGET_API_KEY2}}" -s https://api.nuget.org/v3/index.json
#       - uses: codecov/codecov-action@v2
#         with:
#           token: ${{ secrets.CC_SECRET }} # not required for public repos
#           directory: WebBen.Tests
#           files: lcov.info
#           name: codecov-umbrella # optional
#           fail_ci_if_error: true # optional (default = false)
#           verbose: true # optional (default = false)
          
  release:
    name: Create Github Release
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - name: Create Release
      uses: ncipollo/release-action@v1.10.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        allowUpdates: true
        tag: 'release-master'
        tag_name: 'release-master'
        release_name: Release v1.22
    - name: Output Release URL File
      run: echo ${{ steps.create_release.outputs.upload_url }} > release_url.txt
    - name: Save Release URL File for publish
      uses: actions/upload-artifact@v1
      with:
        name: release_url
        path: release_url.txt
        
  publish:
    needs: [release]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rid: [win-x64, linux-x64, osx-x64]
        dotnet-version: [ '6.0.x' ]
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      NUGET_XMLDOC_MODE: skip
    steps:
    - uses: actions/checkout@v3
    - name: Load Release URL File from release job
      uses: actions/download-artifact@v1
      with:
        name: release_url
    - uses: actions/checkout@v3
    - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    - name: inf
      run: dotnet --version
    - name: Build
      run: dotnet publish --runtime ${{ matrix.rid }} -o ./bin/${{ matrix.rid }} --configuration Release --self-contained -p:PublishSingleFile=true -p:PublishTrimmed=true -p:PublishReadyToRun=true -p:DebugType=None -p:DebugSymbols=false
      #run: dotnet publish -c Release --self-contained --runtime ${{ matrix.rid }} -o ./bin/${{ matrix.rid }}
    - name: Zip
      run: zip -r ${{ matrix.rid }} ./bin/${{ matrix.rid }}
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ./${{ matrix.rid }}.zip
        asset_name: ${{ steps.get_release_info.outputs.file_name }}-${{ matrix.rid }}.zip
        asset_content_type: application/zip

